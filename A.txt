created tokenlistmanager
[SEPARATOR $$, KEYWORD int, IDENTIFIER i, SEPARATOR ,, IDENTIFIER max, SEPARATOR ,, IDENTIFIER sum, SEPARATOR ;, SEPARATOR [, OPERATOR *, IDENTIFIER declarations, OPERATOR *, SEPARATOR ], IDENTIFIER sum, SEPARATOR =, NUMBER 0, SEPARATOR ;, IDENTIFIER i, SEPARATOR =, NUMBER 1, SEPARATOR ;, KEYWORD get, SEPARATOR (, IDENTIFIER max, SEPARATOR ), SEPARATOR ;, KEYWORD if, SEPARATOR (, IDENTIFIER i, SEPARATOR <, IDENTIFIER max, SEPARATOR ), SEPARATOR {, IDENTIFIER sum, SEPARATOR =, IDENTIFIER sum, OPERATOR +, IDENTIFIER i, SEPARATOR ;, IDENTIFIER i, SEPARATOR =, IDENTIFIER i, OPERATOR +, NUMBER 1, SEPARATOR ;, SEPARATOR }, IDENTIFIER else, SEPARATOR {, IDENTIFIER sum, SEPARATOR =, NUMBER 8, SEPARATOR ;, IDENTIFIER sum, SEPARATOR =, NUMBER 10, SEPARATOR ;, SEPARATOR }, IDENTIFIER ifend, IDENTIFIER put, SEPARATOR (, IDENTIFIER sum, OPERATOR +, IDENTIFIER max, SEPARATOR ), SEPARATOR ;, SEPARATOR $$]
Rat20F>  ::=   <Opt Function Definitions>   $$  <Opt Declaration List>  <Statement List>  $$
Opt Function Definitions> ::= <Function Definitions>     |  <Empty>
token is: SEPARATOR $$
token is: SEPARATOR $$
token is: SEPARATOR $$
<Opt Declaration List> ::= <Declaration List> | <Empty>
inside hasNextToken()
<Declaration List>  := <Declaration> ;     |      <Declaration> ; <Declaration List>
<Declaration> ::=   <Qualifier > <IDs>                   
token is: KEYWORD int
Qualifier> ::= int     |    boolean    |  real 
token is: KEYWORD int
<IDs> ::=     <Identifier>    | <Identifier>, <IDs>
token is: KEYWORD int
token is: KEYWORD int
Error at line number 3: expected identifier but got int
<IDs> ::=     <Identifier>    | <Identifier>, <Empty>
inside hasNextToken()
token is: IDENTIFIER i
token is: IDENTIFIER i
Error at line number 3: expected ; but got int
inside hasNextToken()
<Declaration List> ::= <Declaration List>  |  <Empty>
<Statement List> ::=   <Statement>   | <Statement> <Statement List>
<Statement> ::=   <Compound>  |  <Assign>  |   <If>  |  <Return>   | <Print>   |   <Scan>   |  <While> 
token is: SEPARATOR ,
token is: SEPARATOR ,
token is: SEPARATOR ,
token is: SEPARATOR ,
token is: SEPARATOR ,
token is: SEPARATOR ,
token is: SEPARATOR ,
token is: SEPARATOR ,
Error at line number 6: expected { or OR IDENTIFIER OR KEYWORD but got ,
<Statement List> ::= <Statement List>  |  <Empty>
Error at line number 6: expected $$ but got ,
-----------------------------
|                            |
|                            |
|                            |
|                            |
|                            |
|     ----====lexer====----  |
|     ----====lexer====----  |
|     ----====lexer====----  |
|                            |
|                            |
|                            |
|                            |
|                            |
-----------------------------
SEPARATOR $$
KEYWORD int
IDENTIFIER i
SEPARATOR ,
IDENTIFIER max
SEPARATOR ,
IDENTIFIER sum
SEPARATOR ;
SEPARATOR [
OPERATOR *
IDENTIFIER declarations
OPERATOR *
SEPARATOR ]
IDENTIFIER sum
SEPARATOR =
NUMBER 0
SEPARATOR ;
IDENTIFIER i
SEPARATOR =
NUMBER 1
SEPARATOR ;
KEYWORD get
SEPARATOR (
IDENTIFIER max
SEPARATOR )
SEPARATOR ;
KEYWORD if
SEPARATOR (
IDENTIFIER i
SEPARATOR <
IDENTIFIER max
SEPARATOR )
SEPARATOR {
IDENTIFIER sum
SEPARATOR =
IDENTIFIER sum
OPERATOR +
IDENTIFIER i
SEPARATOR ;
IDENTIFIER i
SEPARATOR =
IDENTIFIER i
OPERATOR +
NUMBER 1
SEPARATOR ;
SEPARATOR }
IDENTIFIER else
SEPARATOR {
IDENTIFIER sum
SEPARATOR =
NUMBER 8
SEPARATOR ;
IDENTIFIER sum
SEPARATOR =
NUMBER 10
SEPARATOR ;
SEPARATOR }
IDENTIFIER ifend
IDENTIFIER put
SEPARATOR (
IDENTIFIER sum
OPERATOR +
IDENTIFIER max
SEPARATOR )
SEPARATOR ;
SEPARATOR $$
